{"meta":{"title":"Rapheal's Tech Blog","subtitle":"","description":"Raphael's Tech Blog","author":"Raphael","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Install Docker & Docker Commands","slug":"Docker","date":"2021-02-03T20:08:17.000Z","updated":"2021-02-03T23:10:43.412Z","comments":true,"path":"2021/02/03/Docker/","link":"","permalink":"http://example.com/2021/02/03/Docker/","excerpt":"","text":"Install Docker on the Ubuntu Desktop 20.04Here is the document from docker. First I remove the old version: $ sudo apt-get remove docker docker-engine docker.io containerd runc Then I Installed using the convenience script. Here it is: $ curl -fsSL https://get.docker.com -o get-docker.sh $ sudo sh get-docker.sh Remeber to add your accound to the docker group after the installation. $ sudo usermod -aG docker &lt;your-user&gt; And you need to check if the docker command is belong to docker group. Usually it is belong to root group. $ ls -al `which docker` If not, you need to change the group manually. $ sudo chgrp docker `which docker` To test if the installation is working correctly: $ docker run hello-world If you encounter the permission denied issue, try: $ sudo systemctl restart docker and logout. This worked for me. Basic Docker CommandsStart a container $ docker run nginx List containers ~$ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 8db74ee17b0d nginx &quot;/docker-entrypoint.…&quot; About a minute ago Up About a minute 80/tcp thirsty_lehmann fefbc75c1d6e hello-world &quot;/hello&quot; 8 minutes ago Exited (0) 8 minutes ago great_feynman Stop a container $ docker stop thirsty_lehmann Remove a container $ docker rm thirsty_lehmann List images $ docker images Remove images $ docker rmi nginx Download un image $ docker pull nginx Run a command in the container of ubuntu $ docker run ubuntu sleep 100 $ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 796ba8ba8091 ubuntu &quot;sleep 100&quot; 9 seconds ago Up 7 seconds beautiful_euclid $ docker exec beautiful_euclid cat /etc/hosts 127.0.0.1 localhost ::1 localhost ip6-localhost ip6-loopback Detach and attach $ docker run -d nginx Docker Command line Document Docker Official Images on Docker Hub Document Docker Hub: https://hub.docker.com/ Run tag: $ docker run redis:4.0 $ docker run kodekloud/simple-prompt-docker Welcome! Please enter your name: Hello and Welcome ! Stdin $ docker run -i kodekloud/simple-prompt-docker Welcome! Please enter your name: hallo-ketty Hello and Welcome hallo-ketty! Terminal Mode $ docker run -it kodekloud/simple-prompt-docker Port mapping $ docker run -p new_port:container_port kodekloud/simple-webapp Volume mapping $ docker run -v new_file:container_file mysql $ docker run -v /opt/datadir:/var/lib/mysql mysql Inspect Container $ docker inspect container_name $ docker inspect -f &#39;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#39; container_name logs $ docker logs container_name ENV variables $ docker run -e ENV_VAR=env_var_value image_name Containerizing create a dockerfile docker build Dockerfile -t account_name/image_name docker push account_name/image_name dockerfile: start from a base OS or another image: FROM Ubuntu install all dependencies: RUN apt-get update RUN apt-get install python RUN pip install flask RUN pip install flask-mysql Copy source code: COPY . /opt/source-code Specify Entrypoint: ENTRYPOINT FLASK_APP=/opt/source-code/app.py flask run CMD &amp; ENTRYPOINT","categories":[],"tags":[]},{"title":"Deploy Hexo To Github","slug":"Deploy-Hexo-To-Github","date":"2021-01-26T17:32:16.000Z","updated":"2021-01-27T07:33:52.493Z","comments":true,"path":"2021/01/26/Deploy-Hexo-To-Github/","link":"","permalink":"http://example.com/2021/01/26/Deploy-Hexo-To-Github/","excerpt":"","text":"Recently, I am working on a mini project. It has been years that I touch no more coding. A lot of new frameworks pump me up. And I feel it is real worth to note this experience on the blog. So I am starting with deploy a blog. Voila comme ci-dessous. Local Env: Ubuntu 20.04, Thinkpad X240sStep 1. install hexo on the local machinesudo npm install -g hexo-cli cd &amp;&amp; mkdir Blog &amp;&amp; cd Blog hexo init Step 2. change themecd ~/Blog/ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia Then add theme config to _config.yml don’t foget to set theme yilia don’t foget to tab a space between colon and value don’t repeat the key theme: yilia deploy: &nbsp;&nbsp;&nbsp;&nbsp; type: git &nbsp;&nbsp;&nbsp;&nbsp; repo: https://github.com/Raphael-De-Wang/Raphael-De-Wang.github.io.git &nbsp;&nbsp;&nbsp;&nbsp; branch: master Step 3. add a posthexo n &quot;post name&quot; The new post will be created in the fold source/_posts hexo clean hexo g hexo s Start the hexo server in local, preview the post in localhost:4000 Step 4. depoly to Githubcreate a new project, pick the name same as your username, plus github.io, then push the hexo to github. hexo clean hexo g hexo d Don’t forget to set the github username and email before push","categories":[],"tags":[{"name":"Github, Hexo","slug":"Github-Hexo","permalink":"http://example.com/tags/Github-Hexo/"}]}],"categories":[],"tags":[{"name":"Github, Hexo","slug":"Github-Hexo","permalink":"http://example.com/tags/Github-Hexo/"}]}